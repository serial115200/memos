name: Ubuntu Package Test

on:
  push:
    paths:
      - 'source/env_dev/ubuntu/env_ubuntu.conf'
      - 'source/env_dev/ubuntu/env_ubuntu_20.04.conf'
      - 'source/env_dev/ubuntu/env_ubuntu_22.04.conf'
      - 'source/env_dev/ubuntu/env_ubuntu_24.04.conf'
      - '.github/workflows/ubuntu-package-test.yml'
  workflow_dispatch:
    inputs:
      ubuntu_version:
        description: 'Test all Ubuntu versions'
        required: true
        default: 'all'
        type: choice
        options:
          - 'all'

jobs:
  test-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu-version: [20.04, 22.04, 24.04]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and test Docker image
        run: |
          # Get package list, removing comments and empty lines
          PKGS=$(cat source/env_dev/ubuntu/env_ubuntu.conf source/env_dev/ubuntu/env_ubuntu_${{ matrix.ubuntu-version }}.conf | sed -e 's/#.*$//' -e '/^$/d')

          # Generate Dockerfile
          cat > Dockerfile << EOF
          FROM ubuntu:${{ matrix.ubuntu-version }}

          ENV DEBIAN_FRONTEND=noninteractive

          RUN apt-get update \\
              && apt-get install --no-install-recommends -y \\
          EOF

          # Add packages to Dockerfile
          for pkg in $PKGS; do
              echo "                $pkg \\" >> Dockerfile
          done

          # Complete Dockerfile
          cat >> Dockerfile << EOF
              && apt-get autoremove \\
              && apt-get clean \\
              && rm -rf /var/lib/apt/lists/*
          EOF

          # Build and test the image
          docker buildx build --load -t ubuntu-test:${{ matrix.ubuntu-version }} .
          docker run --rm ubuntu-test:${{ matrix.ubuntu-version }} bash -c "echo 'All packages installed successfully'"
